// <auto-generated />
using System;
using CityOfHopeVolunteerTracking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CityOfHopeVolunteerTracking.Migrations
{
    [DbContext(typeof(COHODatabaseContext))]
    partial class COHODatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("CityOfHopeVolunteerTracking.Models.Initiative", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("First")
                        .HasColumnType("TEXT");

                    b.Property<bool>("InActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Initiative");
                });

            modelBuilder.Entity("CityOfHopeVolunteerTracking.Models.Volunteer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Admin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cell")
                        .HasColumnType("TEXT");

                    b.Property<bool>("CommunityService")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("First")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Home")
                        .HasColumnType("TEXT");

                    b.Property<bool>("InActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Last")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<bool>("WorkersComp")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Volunteer");
                });

            modelBuilder.Entity("CityOfHopeVolunteerTracking.Models.VolunteerActivity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ClockedIn")
                        .HasColumnType("INTEGER");

                    b.Property<float>("ElapsedTime")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("InitiativeID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("VolunteerID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("InitiativeID");

                    b.HasIndex("VolunteerID");

                    b.ToTable("VolunteerActivity");
                });

            modelBuilder.Entity("CityOfHopeVolunteerTracking.Models.VolunteerActivity", b =>
                {
                    b.HasOne("CityOfHopeVolunteerTracking.Models.Initiative", "Initiative")
                        .WithMany()
                        .HasForeignKey("InitiativeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CityOfHopeVolunteerTracking.Models.Volunteer", null)
                        .WithMany("VolunteerActivities")
                        .HasForeignKey("VolunteerID");
                });
#pragma warning restore 612, 618
        }
    }
}
